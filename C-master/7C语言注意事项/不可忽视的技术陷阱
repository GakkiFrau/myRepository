c语言区分大小写
数据溢出产生的陷阱
整数的除法导致结果的偏差
变量未定义
输入数据时忘记添加&符号
使用scanf函数输入格式不符
输入的数据类型不符的陷阱
switch语句中忘记使用break
指针没被初始化，也就是声明的同时要分配一定的空间
操作超出动态分配的内存
使用内存后未释放
内存释放后继续使用
没用说明函数头文件
忽略了字符串结束符‘\0'
数组长度使用变量 如：
int ts=5;    错误
cost int ts=5；
int temp[ts]={20,12,40,31,25};
数组下标越界
子函数未定义产生的陷阱
子函数在说明和定义时类型不一致
“=”与“==”的区别
在定义数组时，将定义的“元素个数”误认为是可使用的最大下标值
字符常量用单引号，而字符串常量用双引号
永远不要使用==运算符来比较字符串的值！字符串是字符数组。
一个字符数组的名字相当于一个指向字符串的指针。
没有使用零字符结束字符串
a和&a的区别，&a是指a的地址
#include <stdio.h>与#include "stdio.h" 的区别
空指针并非空字符串
按位运算符（&，|，~）的操作数被默认为是一个二进制的序列，分别对其中的每个位
进行操作。
逻辑运算（&&，||，！）将操作书当成非真即假。通常都是将0当成假，非0即为真。
指针自动分配空间，但是不能重分配或者改变大小。指针必须明确赋值以指向分配的
空间，但是可以随意重新赋值。
