============================================================================
定义一个结构体时，对成员变量的类型没有限制，可以是任何的基本的数据类型，也可
以是数组，联合体或者枚举类型的变量，甚至是结构体变量或者指向结构体变量的指针。
成员运算符(.)和指向结构体成员的运算符(->)两者都是用来引用结构体变量成员的，
但是他们的应用环境是完全不同的。
成员运算符(.)用在一般结构体变量中，表示结构体变量的成员。指向结构体成员运算符
(->)与指向结构体变量的指针连用，表示指向结构体变量指针的成员。
例如：struct student
	{
		int num;
		char name[10];
	};
	stuct student stu, *s=&stu;
其中，stu.num  s->num 是正确的引用方法，但是stu->num和s.num是不允许的。其实
s->num就相当于(*s).num。
===========================================================================
枚举类型是C语言中的一种高级数据类型，枚举类型可以用来定义常量数值。
声明枚举类型的一般形式如下：
enum 枚举类型
enum weekday
{       
	{
   取值表	sun,mon,tue,wed,thu
	}
}
在上例中，sun等枚举常量依次被编译程序自动赋值为0，1，2，3。
用enum关键字说明枚举常量有三点好处。
1.用enum关键字说明的常量由编译程序自动生成，程序员不需要用手工对常量进行逐
个赋值。
2.在定义enum常量的同时也定义了一个枚举类型标示符。
3.在调试程序时通常可以检查枚举常量，这一点非常有用的，尤其在不得不手工检查
头文件中的常量值时。
==========================================================================
.h文件：一般情况下将如下内容放到.h文件中。
   宏定义
   结构，联合和枚举声明
   typedef声明
   外部函数声明
   全局变量声明
===========================================================================
C语言中的预处理功能：所谓预处理是指进行编译的第一遍扫描（词法分析和语法分析）
之前所做的工作。
在C语言中包含以下几方面的预处理功能：
  宏定义：包含参无数宏定义和有参数定义
  文件包含：是指一个源文件可以把另一个源文件完全包含进来
  条件编译：对源程序中的程序段进行有选择的编译
预处理命令语句和一般C语言的语句不同。所有的预处理语句都是以#开头，单独占一行，
不用分号结尾，并且一般放在程序的开始处。
===========================================================================
malloc()和calloc()均包含在stdlib.h的头文件中
malloc和calloc函数的区别
参数上的区别：
malloc(size_t size);	
calloc(size_t n,size_t size);
malloc分配一块size大小的内存快，而calloc分配一个n*size大小的内存块。
返回内存块的状态不同。
malloc分配的内存块没有被清零，而calloc分配的内存块是清零的。
释放内存空间的函数是free()。
============================================================================
