CPU：
GPU：
ALU：
PC：
USB：

总线
贯穿整个系统的一组电子管道，称作总线，它携带信息字节并负责
在各个部件之间传递。通常总线被设计成传送定长的字节块，也就
是字。字中的字节数（字长）是一个基本的系统参数，各个系统中
也不尽相同。

I/O设备
I/O（输入输出）设备是系统与外界的联系通道。
功能是在I/O总线和I/O设备之间传递信息。
每个I/O设备都是通过一个控制器或适配器与I/O总线连接起来的。
控制器与适配器的区别主要在于它们的组成方式。
控制器：是I/O设备本身中或是系统的主印制电路板（主板）上的
		芯片组
适配器：是一块插在主板插槽上的卡。

主存
主存是一个临时存储设备，在处理执行程序时，它被用来存放
程序和程序处理的数据。
物理上来说，主存是由一组DRAM（动态随机存取存储器）芯片
组成的。
逻辑上来说，存储器是由一个线性的字节数组成的，每个字节
都有自己惟一的地址（数组索引），这些地址都是从零开始。
一般来说，组成程序的每条机器指令都由不定量的字节构成。

处理器
中央处理器（CPU）简称处理器，是解释（或执行）存储在主存
中指令的引擎。处理器的核心是一个被称为程序计数器（PC）
的字长大小的存储设备（或寄存器）。在任何一个时间点上，
PC都指向内存中的某条机器语言指令（内含其地址）
从系统通电开始，直到系统断电，处理器一直在不假思索地执行
相同的基本任务：从程序计数器（PC）指向的存储器处读取指令，
解释指令中的位，执行指令指示的简单操作，然后更新程序计数
器指向下一条指令，而这条指令并不一定在存储器中和刚刚执行
的指令相邻。
这样的简单操作的数目并不多，它们在主存，寄存器文件（register file）
和算术逻辑单元（ALU）之间循环。
寄存器文件是一个小小的存储设备，由一些字长大小的寄存器组成，
这些寄存器每个都有惟一的名字。
ALU计算新的数据和地址值。
加载：从主存拷贝一个字节或者一个字到寄存器，覆盖寄存器原来	
	的内容
存储：从寄存器拷贝一个字节或者一个字到主存的某个位置，覆盖
	这个位置上原来的内容
更新：拷贝两个寄存器的内容到ALU，ALU将两个相加，并将结果存
	放到一个寄存器中，覆盖该寄存器中原来的内容
I/O读：从一个I/O设备中拷贝一个字节或者一个字到一个寄存器
I/O写：从一个寄存器中拷贝一个字节或者一个字到一个I/O设备
转移：从指令本身中抽取一个字，并将这个字拷贝到程序计数器（PC）
	中，覆盖PC中原来的值
	
执行hello程序
键盘输入"./hello" --> shell逐一读取字符到寄存器，再放到存储器
过程：
	通用串行总线控制器-->I/O桥-->总线接口-->寄存器文件-->总线 
	接口-->I/O桥-->存储器总线-->主存储器
键盘敲回车键时，shell知道结束了命令的输入。然后shell执行一系列
指令，这些指令将hello目标文件中的代码和数据从磁盘拷贝到主存，
从而加载hello文件。数据最终会被输出的字符串"hello world\n"。
利用DMA的技术，数据可以不通过处理器而直接从磁盘到达内存。
过程：
	磁盘-->磁盘控制器-->I/O总线-->I/O桥--存储器总线-->主存储器
	处理器执行机器语言指令
	主存储器("hello world\n")拷贝 -->存储器总线-->I/O桥-->系统
	总线-->总线接口-->寄存器文件-->总线接口-->I/O桥-->I/O总线-->
	图形适配器-->显示器
	
高速缓存
高速缓存存储器（cache memories）它们被用来作为暂时的集结区域，存放
处理器在不久的将来可能会需要的信息。
L1高速缓存：容量可达数万字节，访问速度几乎和访问寄存器文件一样快
L2高速缓存：容量为数十万到数百万字节，进程访问时间开销比L1大5倍，
			但仍然比访问主存快5~10倍。
L1和L2高速缓存是通过静态随机访问存储器（SRAM）的硬件计数实现的。

信息存储
数字编码：无符号编码
		  二进制补码
		  浮点数
溢出
字节：8位的块，作为最小的可寻址的存储器单位，而不是访问存储器中单独的位
虚拟存储器：（virtual memory）
	存储器的每个字节都由一个惟一的数字来标识，称为它的地址（address）
	所有可能地址的集合就称为虚拟地址空间（virtual address space）
	是一个展示给机器级程序的概念性映像。
指针：C的一个重要特性，就像一个变量，指针也有它的值和它的类型，它的值
	表示的是某个对象的位置，而它的类型表示那个位置上所存储对象的类型
十六进制
	对于被写成i+4j形式的n来说，其中0<=i<=3，我们可以把x写成开头的十六
	进制数字为1（i=0），2（i=1），4（i=2），8（i=3），后面跟随着j个十
	六进制的0。
	比如，x=2048=2^11，有n=11=3+4*2，从而得到十六进制0x800
	
	
	
逻辑运算符&&和||如果对第一个参数求值就能确定表达式的结果，那么逻辑表达
式就不会对第二个参数进行求值	
	例 a&&5/a 将不会造成被零除
	   p&&*p++ 不会导致间接引用空指针
	
	
	
	
	
	
	
	
	




























